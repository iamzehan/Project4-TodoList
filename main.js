/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 193:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "static/folder.png";

/***/ }),

/***/ 539:
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("{\n;// ./src/components/Inbox/empty.html\n// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(193), __webpack_require__.b);\n// Module\nvar code = ` <img src=\"${___HTML_LOADER_IMPORT_0___}\" alt=\"inbox-img\"> <h4>Capture now, plan later</h4> <p>Inbox is your go-to spot for quick task entry. Clear your mind now, organize when youâ€™re ready.</p> <button class=\"common\"> <span class=\"icon\">add</span> <text>Add Task</text> </button> `;\n// Exports\n/* harmony default export */ const empty = (code);\n;// ./src/components/Inbox/Data.json\nconst Data_namespaceObject = /*#__PURE__*/JSON.parse('{\"tasks\":[{\"id\":1,\"title\":\"Design Landing Page UI\",\"due\":\"10/06/2025\",\"description\":\"Create a responsive landing page layout using TailwindCSS and finalize color palette for the new marketing site.\"},{\"id\":2,\"title\":\"Fix Login API Error\",\"due\":\"10/07/2025\",\"description\":\"Resolve the 500 status issue occurring in the POST /auth/login endpoint when invalid credentials are provided.\"},{\"id\":3,\"title\":\"Team Meeting with QA\",\"due\":\"10/08/2025\",\"description\":\"Discuss test coverage, review bug reports, and plan regression testing schedule for the upcoming release.\"},{\"id\":4,\"title\":\"Write Unit Tests for Payment Module\",\"due\":\"10/09/2025\",\"description\":\"Add Jest unit tests to validate Stripe payment flow and ensure all API responses are handled correctly.\"},{\"id\":5,\"title\":\"Update Documentation\",\"due\":\"10/10/2025\",\"description\":\"Revise README and API docs to include the new endpoints added for task management and authentication.\"},{\"id\":6,\"title\":\"Refactor Sidebar Component\",\"due\":\"10/11/2025\",\"description\":\"Clean up React component logic, separate UI and state management, and ensure proper accessibility labels.\"},{\"id\":7,\"title\":\"Push Build to Staging\",\"due\":\"10/12/2025\",\"description\":\"Deploy the latest branch to the staging environment for internal review and feedback collection.\"},{\"id\":8,\"title\":\"Design New App Icon\",\"due\":\"10/13/2025\",\"description\":\"Create a minimal and modern vector icon that fits both light and dark mode themes.\"},{\"id\":9,\"title\":\"Optimize Database Queries\",\"due\":\"10/14/2025\",\"description\":\"Review slow queries in PostgreSQL, add necessary indexes, and benchmark improved response times.\"},{\"id\":10,\"title\":\"Prepare Presentation Slides\",\"due\":\"10/15/2025\",\"description\":\"Design slides for the monthly progress meeting, highlighting new features, metrics, and upcoming goals.\"}]}');\n;// ./src/components/sub-components/createButton.js\nclass Button {\r\n  constructor(classNames = [], icon, text) {\r\n    this.classNames = classNames;\r\n    this.icon = icon;\r\n    this.text = text;\r\n    this.button = document.createElement(\"button\");\r\n  }\r\n  classAdd() {\r\n    this.classNames.forEach((className) => {\r\n      this.button.classList.add(className);\r\n    });\r\n  }\r\n  getButtonWithText() {\r\n    this.classAdd();\r\n    this.button.innerHTML = `<span class=\"icon\">${this.icon}</span><text>${this.text}</text>`;\r\n    return this.button;\r\n  }\r\n  getButtonWithoutText() {\r\n    this.classAdd();\r\n    this.button.innerHTML = `<span class=\"icon\">${this.icon}</span>`;\r\n    return this.button;\r\n  }\r\n}\n;// ./src/components/sub-components/Dialog.js\n\r\n\r\n// Here you basically do everything with a dialog\r\n\r\nclass Dialog {\r\n  constructor(legend, data) {\r\n\r\n    // main data \r\n    this.data = data;\r\n    this.dialog = document.createElement(\"dialog\");\r\n    this.fieldset = document.createElement(\"fieldset\");\r\n\r\n    this.legend = document.createElement(\"legend\");\r\n    this.legend.textContent = legend;\r\n\r\n    this.input = document.createElement(\"input\");\r\n    this.input.type = \"text\";\r\n    this.input.className = \"title\";\r\n    this.input.placeholder = \"Title\";\r\n\r\n    this.textarea = document.createElement(\"textarea\");\r\n    this.textarea.name = \"description\";\r\n    this.textarea.id = \"description\";\r\n    this.textarea.placeholder = \"Write here...\";\r\n\r\n    // Create buttons container\r\n    this.buttonContainer = document.createElement(\"div\");\r\n    this.buttonContainer.classList.add(\"btn-container\");\r\n\r\n    this.save = new Button(\r\n      [\"common\", \"save\"],\r\n      \"save\",\r\n      \"Save\"\r\n    ).getButtonWithText();\r\n\r\n    this.update = new Button(\r\n      [\"common\", \"update\"],\r\n      \"update\",\r\n      \"Update\"\r\n    ).getButtonWithText();\r\n\r\n    this.cancel = new Button(\r\n      [\"common\", \"mono\", \"cancel\"],\r\n      \"cancel\",\r\n      \"Cancel\"\r\n    ).getButtonWithText();\r\n    this.cancel.addEventListener(\"click\", () => this.dialog.close());\r\n  }\r\n\r\n  open() {\r\n    return this.dialog.showModal();\r\n  }\r\n\r\n  close() {\r\n    return this.dialog.close();\r\n  }\r\n}\r\n\r\n// Dialog Read View\r\nclass DialogReadOnly extends Dialog {\r\n  constructor(inbox, data, task) {\r\n    super(task.title, data);\r\n    this.task = task;\r\n    this.data = data;\r\n    this.task = task;\r\n\r\n    // the legend should contain the title of the task;\r\n    this.fieldset.appendChild(this.legend);\r\n    this.description = document.createElement(\"p\");\r\n    this.description.textContent = this.task.description;\r\n    this.fieldset.appendChild(this.description);\r\n    this.dialog.appendChild(this.fieldset);\r\n    this.update.lastElementChild.textContent=\"Edit\";\r\n    this.cancel.lastElementChild.textContent = \"Exit\";\r\n    this.buttonContainer.appendChild(this.cancel);\r\n    this.buttonContainer.appendChild(this.update);\r\n    this.dialog.appendChild(this.buttonContainer);\r\n    inbox.appendChild(this.dialog);\r\n\r\n    // event listener for edit\r\n    this.update.addEventListener(\"click\", () => {\r\n      const update = new UpdateTask(inbox, this.data, this.task);\r\n      update.cancel.lastElementChild.textContent = \"Back\";\r\n      update.open();\r\n    });\r\n  }\r\n}\r\n\r\n// Dialog Write View\r\nclass DialogWrite extends Dialog {\r\n  constructor(legend) {\r\n    super(legend);\r\n    // Build structure\r\n    this.fieldset.appendChild(this.legend);\r\n    this.fieldset.appendChild(this.input);\r\n    this.fieldset.appendChild(this.textarea);\r\n    this.dialog.appendChild(this.fieldset);\r\n    this.buttonContainer.appendChild(this.cancel);\r\n    this.dialog.appendChild(this.buttonContainer);\r\n  }\r\n}\r\n\r\n// AddTasks \r\nclass AddTask extends DialogWrite {\r\n  constructor(inbox, legend = \"Add New Task\") {\r\n    super(legend);\r\n    this.buttonContainer.appendChild(this.save);\r\n    inbox.appendChild(this.dialog);\r\n  }\r\n}\r\n\r\n// UpdateTasks\r\nclass UpdateTask extends DialogWrite {\r\n  constructor(inbox, data, task, legend = \"Update Task\") {\r\n    super(legend, data);\r\n    this.data = data;\r\n    this.task = task;\r\n    this.input.value = this.task.title;\r\n    this.textarea.textContent = this.task.description;\r\n    this.buttonContainer.appendChild(this.update);\r\n    inbox.appendChild(this.dialog);\r\n    this.update.addEventListener(\"click\", ()=> {\r\n      this.close();\r\n    });\r\n  }\r\n}\r\n\r\n\n;// ./src/components/sub-components/createListCards.js\n\r\n\r\n\r\n// List item constructor\r\nfunction List(inbox, data, task) {\r\n  this.inbox = inbox;\r\n  this.data = data;\r\n  this.task = task;\r\n\r\n  // task list item\r\n  this.taskItem = document.createElement(\"li\");\r\n\r\n  // checkbox\r\n  const inputCheck = document.createElement(\"input\");\r\n  inputCheck.type = \"checkbox\";\r\n  inputCheck.id = this.task.id;\r\n  this.taskItem.appendChild(inputCheck);\r\n\r\n  // task title\r\n  this.title = document.createElement(\"h3\");\r\n  this.title.textContent = this.task.title;\r\n  this.taskItem.appendChild(this.title);\r\n\r\n  // task due date\r\n  const due = document.createElement(\"p\");\r\n  due.textContent = this.task.due;\r\n  this.taskItem.appendChild(due);\r\n\r\n  // Edit button\r\n  this.editBtn = new Button([\"icon-btn\", \"edit\"], \"edit\").getButtonWithoutText();\r\n  this.taskItem.appendChild(this.editBtn);\r\n\r\n  this.editBtn.addEventListener(\"click\", () => {\r\n    const updater = new UpdateTask(this.inbox, this.data, this.task);\r\n    updater.open();\r\n  });\r\n\r\n  // Delete button\r\n  this.deleteBtn = new Button([\"icon-btn\", \"delete\"], \"delete\").getButtonWithoutText();\r\n  this.taskItem.appendChild(this.deleteBtn);\r\n\r\n  this.deleteBtn.addEventListener(\"click\", () => {\r\n    // Remove the task from data\r\n    this.data.tasks = this.data.tasks.filter(item => item.id !== this.task.id);\r\n\r\n    // Update localStorage\r\n    localStorage.setItem(\"data\", JSON.stringify(this.data));\r\n\r\n    // Fade-out before removal\r\n    this.taskItem.style.transition = \"opacity 0.3s ease\";\r\n    this.taskItem.style.opacity = \"0\";\r\n\r\n    setTimeout(() => {\r\n      this.taskItem.remove();\r\n\r\n      // Refresh the list if Wrapper instance is available\r\n      if (this.inbox.Wrapper) {\r\n        this.inbox.Wrapper.refresh();\r\n      }\r\n    }, 300);\r\n  });\r\n\r\n  // Read button\r\n  this.readBtn = new Button([\"icon-btn\", \"view\"], \"description\").getButtonWithoutText();\r\n  this.taskItem.appendChild(this.readBtn);\r\n\r\n  // read button & title both open read-only dialog\r\n  [this.readBtn, this.title].forEach((item) => {\r\n    item.addEventListener(\"click\", () => {\r\n      const viewer = new DialogReadOnly(inbox, this.data, this.task);\r\n      viewer.open();\r\n    });\r\n  });\r\n\r\n  // checkbox toggle event\r\n  inputCheck.addEventListener(\"click\", () => {\r\n    this.taskItem.classList.toggle(\"checked\");\r\n  });\r\n}\r\n\r\n// Wrapper for inbox task list\r\nfunction Wrapper(inbox, data) {\r\n  // Store initial data\r\n  localStorage.setItem(\"data\", JSON.stringify(data));\r\n  this.data = JSON.parse(localStorage.getItem(\"data\"));\r\n\r\n  // inbox list wrapper\r\n  this.inboxListBodyWrapper = document.createElement(\"div\");\r\n  this.inboxListBodyWrapper.classList.add(\"inbox-list-body-wrapper\");\r\n\r\n  // unordered list for tasks\r\n  const inboxListBody = document.createElement(\"ul\");\r\n  inboxListBody.classList.add(\"inbox-list-body\");\r\n\r\n  // render all tasks\r\n  this.data.tasks.forEach((task) => {\r\n    const list = new List(inbox, this.data, task);\r\n    inboxListBody.appendChild(list.taskItem);\r\n  });\r\n\r\n  // append list to wrapper\r\n  this.inboxListBodyWrapper.appendChild(inboxListBody);\r\n\r\n  // Add new task button\r\n  this.button = new Button([\"common\", \"special\"], \"add_circle\", \"Add Task\").getButtonWithText();\r\n\r\n  // add event listener for new task dialog\r\n  this.button.addEventListener(\"click\", () => {\r\n    const dialog = new AddTask(inbox);\r\n    dialog.open();\r\n  });\r\n\r\n  // append button to wrapper\r\n  this.inboxListBodyWrapper.appendChild(this.button);\r\n\r\n  // Refresh method (reloads tasks from storage and re-renders)\r\n  this.refresh = () => {\r\n    this.data = JSON.parse(localStorage.getItem(\"data\"));\r\n    const listBody = this.inboxListBodyWrapper.querySelector(\".inbox-list-body\");\r\n    listBody.innerHTML = \"\";\r\n\r\n    this.data.tasks.forEach((task) => {\r\n      const list = new List(inbox, this.data, task);\r\n      listBody.appendChild(list.taskItem);\r\n    });\r\n  };\r\n}\r\n\r\n/* harmony default export */ const createListCards = (Wrapper);\n;// ./src/components/Inbox/index.js\n//styles\r\n\r\n\r\n//peripherals\r\n\r\n\r\n\r\n//components\r\n\r\n\r\nclass Common {\r\n  constructor(content) {\r\n\r\n    //main body wrapper\r\n    this.inbox = document.createElement(\"div\");\r\n    this.inbox.classList.add(\"inbox\");\r\n\r\n    //page title\r\n    this.pageTitle = document.createElement(\"h1\");\r\n    this.pageTitle.classList.add(\"page-title\");\r\n    this.pageTitle.textContent = \"Inbox\";\r\n    this.inbox.appendChild(this.pageTitle);\r\n\r\n    // content\r\n    this.content = content;\r\n    this.content.appendChild(this.inbox);\r\n  }\r\n}\r\n\r\nclass EmptyBody extends Common {\r\n  constructor(content) {\r\n    super(content);\r\n    this.inboxEmptyBody = document.createElement(\"div\");\r\n    this.inboxEmptyBody.classList.add(\"inbox-empty-body\");\r\n    this.inboxEmptyBody.innerHTML += empty;\r\n    this.inbox.appendChild(this.inboxEmptyBody);\r\n  }\r\n}\r\n\r\nclass Populate extends Common {\r\n  constructor(content) {\r\n    super(content);\r\n    // append the List Body Wrapper\r\n    this.wrapper = new createListCards(this.inbox, Data_namespaceObject);\r\n    this.inbox.appendChild(this.wrapper.inboxListBodyWrapper);\r\n  }\r\n}\r\n\r\nfunction Inbox(content) {\r\n  const hasTasks = Data_namespaceObject?.tasks?.length > 0;\r\n  const Page = hasTasks ? Populate : EmptyBody;\r\n  return new Page(content);\r\n}\r\n\r\n/* harmony default export */ const components_Inbox = (Inbox);\r\n\n;// ./src/components/AddTask/index.js\n\r\n\r\nfunction Add(content) {\r\n  const task = new AddTask(content);\r\n  task.open();\r\n  task.cancel.addEventListener(\"click\", () => {\r\n    components_Inbox(content);\r\n  });\r\n  task.save.addEventListener(\"click\", () => {\r\n    components_Inbox(content);\r\n    task.close();\r\n  });\r\n}\r\n/* harmony default export */ const components_AddTask = (Add);\n;// ./src/index.js\n\r\n\r\n\r\n\r\nclass Controller {\r\n  constructor(lastTarget = null, button, pageContent, fallBack) {\r\n    // keeping the buttons\r\n    this.lastTarget = lastTarget ? lastTarget : button;\r\n    this.button = button;\r\n    this.fallBack = fallBack;\r\n\r\n    // get the button property that holds it's name\r\n    this.lastTargetText = this.lastTarget.lastElementChild.textContent;\r\n    this.buttonText = this.button.lastElementChild.textContent;\r\n    this.fallBackText = this.fallBack.lastElementChild.textContent;\r\n\r\n    // get the button classes\r\n    this.lastTargetClass = this.lastTarget.classList;\r\n    this.buttonClass = this.button.classList;\r\n    this.fallBackClass = this.button.classList;\r\n\r\n    // finally the content element\r\n    this.pageContent = pageContent;\r\n  }\r\n\r\n  setActiveState() {\r\n    const isDifferent = this.buttonText != this.lastTargetText;\r\n    if (isDifferent) {\r\n      this.buttonClass.add(\"active\");\r\n      this.lastTargetClass.remove(\"active\");\r\n    }\r\n    return this.button;\r\n  }\r\n\r\n  loadPage() {\r\n    this.pageContent.innerHTML = \"\";\r\n    let pageName = this.buttonText;\r\n    const isActive = this.buttonClass.contains(\"active\");\r\n\r\n    if (pageName == \"Inbox\" && isActive) {\r\n      components_Inbox(this.pageContent);\r\n    }\r\n    if (pageName == \"Add task\" && isActive) {\r\n      components_AddTask(this.pageContent);\r\n    }\r\n    if (pageName.includes(\"notifications\")) {\r\n      if (isActive) {\r\n        this.button.lastElementChild.textContent = \"notifications\";\r\n      }\r\n      this.pageContent.innerHTML = \"<h1>Notifications</h1>\";\r\n    }\r\n  }\r\n}\r\n\r\nconst navButtons = document.querySelectorAll(\"button\");\r\nconst fallBack = document.querySelector(\"button.active\");\r\nlet lastTarget = fallBack;\r\n\r\nconst pageContent = document.querySelector(\".content\");\r\nconst defaultController = new Controller(\r\n  null,\r\n  lastTarget,\r\n  pageContent,\r\n  fallBack\r\n);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  lastTarget = defaultController.setActiveState();\r\n  defaultController.loadPage();\r\n});\r\n\r\nnavButtons.forEach((button) => {\r\n  button.addEventListener(\"click\", () => {\r\n    const controller = new Controller(\r\n      lastTarget,\r\n      button,\r\n      pageContent,\r\n      fallBack\r\n    );\r\n    lastTarget = controller.setActiveState();\r\n    controller.loadPage();\r\n  });\r\n});\r\n\r\nconst dockButton = document.querySelector(\"span.dock\");\r\nconst navBar = document.querySelector(\"nav\");\r\ndockButton.addEventListener(\"click\", () => {\r\n  navBar.classList.toggle(\"hide\");\r\n\r\n  if (navBar.classList.contains(\"hide\")) {\r\n    dockButton.textContent = \"dock_to_right\";\r\n  } else {\r\n    dockButton.textContent = \"dock_to_left\";\r\n  }\r\n  pageContent.classList.toggle(\"expand\");\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///539\n\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/^blob:/, "").replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = (document && document.baseURI) || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			792: 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__(539);
/******/ 	
/******/ })()
;